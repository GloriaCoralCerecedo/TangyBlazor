@page "/learnBlazor/BindProd"

<h2 class="text-success">Individual Product</h2>
<div class="row">
     <div class="col-6 border p-3">
    <h3 class="text-primary">Product Playground</h3> <hr />
    <div>
        Active:<input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" /><br />
    </div>
    <div>
        Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /><br />
    </div>
    <div>
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var products in Product.ProductProperties)
            {
                <option value="@products.Key">@products.Key</option>
            }
        </select>
    </div>
</div>
<br />
    <div class="col-6 border p-3">

        <h3 class="text-primary">Product Summary</h3> <hr />
        Name: @Product.Name <br />
        Active: @Product.IsActive <br />
        Price: @Product.Price <br />
        @*This Product is: @activeString<br/><br/>*@
        This Product is: @(Product.IsActive ? "Active" : "InActive")<br />
        Property Select: @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value : @Product.ProductProperties.FirstOrDefault(u=>u.Key==selectedProp).Value</p>
        }
        @*Active:<input type="checkbox" checked="true" @onclick=IsActiveOrFalse @bind-value="@Product.IsActive"/><br/>*@
    </div>
</div>
<br />

<div class="col-12 ">
    <table class="table table-striped">
        <tbody>
            @foreach(var prop in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="@prop.Name" @bind-value:event="oninput" />
                    </td
                     <td>
                        <input type="text" @bind-value="@prop.Price" @bind-value:event="oninput" />
                    </td>
                     <td>
                        <input type="checkbox" @bind-value="@prop.IsActive" checked="@(prop.IsActive?"checked":null)"/>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*<h2 class="text-success">Product Table</h2>
<div class="container">
    <div class="border p-2" style="background-color:lightgrey">
        <div class="row">
            <div class="col-4">
                <input type="text" @bind-value="@Products.FirstOrDefault().Name" @bind-value:event="oninput" />
            </div>
            <div class="col-4">
                <input type="text" @bind-value="@Products.FirstOrDefault().Price" @bind-value:event="oninput" />
            </div>
            <div class="col-4">
                <input type="checkbox" @bind-value="@Products.FirstOrDefault().IsActive"/>
            </div>
        </div>  
    </div>
    <div class="border p-2">
        <div class="row">
            <div class="col-4"> 
                <input type="text" @bind-value="@Products.LastOrDefault().Name" @bind-value:event="oninput" />
            </div>
            <div class="col-4"> 
                <input type="text" @bind-value="@Products.LastOrDefault().Price" @bind-value:event="oninput" />
            </div>
             <div class="col-4">
                <input type="checkbox" @bind-value="@Products.LastOrDefault().IsActive" checked="@(Product.IsActive?"checked":null)"/>
            </div>
        </div>
    </div>
</div>*@
    <br/> <br/>

<h2>Product Summary</h2>
@foreach(var prop in Products)
{
    <p>@prop.Name [@prop.Price] is @(prop.IsActive? "Active" : "InActive")</p>
}
@*@Products.FirstOrDefault().Name [@Products.FirstOrDefault().Price] is @(Products.FirstOrDefault().IsActive ? "Active" : "InActive") <br/>
@Products.LastOrDefault().Name [@Products.LastOrDefault().Price] is @(Products.LastOrDefault().IsActive ? "Active" : "InActive")
*@

@code {
    private string selectedProp = "";
    //string activeString = "Active";
    Tangy_Models.LearnBlazorModels.Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<DemoProductProp>()
            {
                new DemoProductProp {Id = 1, Key = "Color", Value = "Black"},
                new DemoProductProp {Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
                new DemoProductProp {Id = 3, Key = "Size", Value = "20oz"}
            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10.99,
                ProductProperties = new()
                {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new DemoProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new DemoProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 13.99,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new DemoProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

    //void IsActiveOrFalse()
    //{
    //    if (!Product.IsActive)
    //    {
    //        activeString = "Active";
    //    }
    //    else
    //    {
    //        activeString = "InActive";
    //    }
    //}
}
